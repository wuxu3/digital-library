<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "../mybatis-3-mapper.dtd" >
<mapper namespace="com.baizhi.common.dao.BookDao">

    <resultMap id="bookResultMap" type="com.baizhi.common.entity.Book">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sketch" column="sketch"/>
        <result property="publishdate" column="publishdate"/>
        <result property="sortId" column="sort_id"/>
        <result property="readNumber" column="readnumber"/>
        <result property="photo" column="photo"/>
        <result property="author" column="author"/>
        <result property="isbn" column="isbn"/>
        <result property="publish" column="publish"/>
        <result property="status" column="status"/>
        <association property="sort" javaType="com.baizhi.common.entity.Sort">
            <id property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="parentId" column="spid"/>
        </association>
    </resultMap>

    <select id="selectAllBooks" resultMap="bookResultMap">

        select t1.*,t2.id as sid,t2.name as sname,t2.parent_id
        as spid from t_book t1 left join t_sort t2 on t1.sort_id=t2.id limit #{page},#{rows}

    </select>

    <select id="selectBookCount" resultType="java.lang.Integer">

        select count(id) from t_book

    </select>

    <insert id="addBooks">

        insert into t_book
        values(#{id},#{name},#{sketch},#{publishdate},#{sortId},#{readNumber},#{photo},#{author},#{isbn},#{publish},#{status})

    </insert>

    <delete id="deleteBook">

        delete from t_book where id=#{id}

    </delete>


    <update id="updateBook">

        update t_book set
        name=#{name},sketch=#{sketch},publishdate=#{publishdate},sort_id=#{sortId},readnumber=#{readNumber},author=#{author},isbn=#{isbn},publish=#{publish},status=#{status}
        where id=#{id}

    </update>

    <select id="selectOne" resultType="com.baizhi.common.entity.Book">

        select id,name,sketch,publishdate,sort_id as sortId,readnumber as readNumber,photo,author,isbn,publish,status
        from t_book where id=#{id}

    </select>

    <update id="updatePhoto">

        update t_book set photo=#{photo} where id=#{id}

    </update>

    <update id="downBooks">

        update t_book set status=0,sort_id=#{newSortId} where sort_id=#{sortId}

    </update>

    <select id="allBooks" resultType="com.baizhi.common.entity.Book">

        select id,name from t_book

    </select>

    <select id="selectBooksBySortId" resultMap="bookResultMap">

        select t1.*,t2.id as sid,t2.name as sname,t2.parent_id
        as spid from t_book t1 left join t_sort t2 on t1.sort_id=t2.id where t1.sort_id=#{sortId}

    </select>

    <select id="selectByRacK" resultMap="bookResultMap">
        select t4.* from t_user t1 left join t_bookrack t2 on t1.rack_id=t2.id left join book_bookrack t3 on
        t2.id=t3.rack_id left join t_book t4 on t3.book_id=t4.id where t1.id=#{userId}

    </select>

    <select id="selectNameAndNum" resultMap="bookResultMap">
        select t1.*,t2.id as sid,t2.name as sname,t2.parent_id
        as spid from t_book t1 left join t_sort t2 on t1.sort_id=t2.id


    </select>

    <select id="photoTypeCount" resultType="java.lang.Integer">
        select count(*) from t_book where photo like concat(concat('%',#{type}),'%')
    </select>

</mapper>